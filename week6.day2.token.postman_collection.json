{
	"info": {
		"_postman_id": "0d3762e7-c832-417f-8d55-b398ff89385a",
		"name": "week6.day2.token",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28447185",
		"_collection_link": "https://testleaf-4289.postman.co/workspace/REST_API_Session_Jun_2025~c55ec55d-358e-4b2e-96dc-a16d8089d6de/collection/28447185-0d3762e7-c832-417f-8d55-b398ff89385a?action=share&source=collection_link&creator=28447185"
	},
	"item": [
		{
			"name": "Create-OAuth-Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var jsonRes = pm.response.json()\r",
							"pm.collectionVariables.set(\"access_token\", jsonRes.access_token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "86d5179e62322210f3ce6e390980b049",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "|Spd.,h;AU",
							"type": "text"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "text"
						},
						{
							"key": "password",
							"value": "qy/Q6A=vOM3x",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://dev209663.service-now.com/oauth_token.do",
					"protocol": "https",
					"host": [
						"dev209663",
						"service-now",
						"com"
					],
					"path": [
						"oauth_token.do"
					]
				}
			},
			"response": []
		},
		{
			"name": "create-new-record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has Created\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"pm.test('Validate the response is json', function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).contains('application/json');\r",
							"    // pm.collectionVariables.set(\"sysId\", pm.response.json().result.sys_id);\r",
							"});\r",
							"\r",
							"var jsonResponse = pm.response.json();\r",
							"var id = jsonResponse.result.sys_id;\r",
							"pm.collectionVariables.set(\"sysId\", id); "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"short_description\": \"REST\",\r\n    \"description\": \"API\",\r\n    \"active\": \"true\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocal}}://{{hostName}}/{{basePath}}/:tableName",
					"protocol": "{{protocal}}",
					"host": [
						"{{hostName}}"
					],
					"path": [
						"{{basePath}}",
						":tableName"
					],
					"variable": [
						{
							"key": "tableName",
							"value": "{{tableName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get-a-record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate the sys_id value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result.sys_id).to.eql(pm.collectionVariables.get(\"sysId\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocal}}://{{hostName}}/{{basePath}}/:tableName/:sys_id",
					"protocol": "{{protocal}}",
					"host": [
						"{{hostName}}"
					],
					"path": [
						"{{basePath}}",
						":tableName",
						":sys_id"
					],
					"variable": [
						{
							"key": "tableName",
							"value": "{{tableName}}"
						},
						{
							"key": "sys_id",
							"value": "{{sysId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update-a-record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate the sys_id value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result.sys_id).to.eql(pm.collectionVariables.get(\"sysId\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"short_description\": \"Update Request\"    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocal}}://{{hostName}}/{{basePath}}/:tableName/:sys_id",
					"protocol": "{{protocal}}",
					"host": [
						"{{hostName}}"
					],
					"path": [
						"{{basePath}}",
						":tableName",
						":sys_id"
					],
					"variable": [
						{
							"key": "tableName",
							"value": "{{tableName}}"
						},
						{
							"key": "sys_id",
							"value": "{{sysId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete-a-record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has No Content\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{protocal}}://{{hostName}}/{{basePath}}/:tableName/:sys_id",
					"protocol": "{{protocal}}",
					"host": [
						"{{hostName}}"
					],
					"path": [
						"{{basePath}}",
						":tableName",
						":sys_id"
					],
					"variable": [
						{
							"key": "tableName",
							"value": "{{tableName}}"
						},
						{
							"key": "sys_id",
							"value": "{{sysId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Validate-deletion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has Not Found\", function () {\r",
							"    pm.response.to.have.status(\"Not Found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocal}}://{{hostName}}/{{basePath}}/:tableName/:sys_id",
					"protocol": "{{protocal}}",
					"host": [
						"{{hostName}}"
					],
					"path": [
						"{{basePath}}",
						":tableName",
						":sys_id"
					],
					"variable": [
						{
							"key": "tableName",
							"value": "{{tableName}}"
						},
						{
							"key": "sys_id",
							"value": "{{sysId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "basePath",
			"value": "api/now/table",
			"type": "string"
		},
		{
			"key": "tableName",
			"value": "incident",
			"type": "string"
		},
		{
			"key": "username",
			"value": "admin",
			"type": "string"
		},
		{
			"key": "password",
			"value": "",
			"type": "string"
		},
		{
			"key": "sysId",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		}
	]
}