{
	"info": {
		"_postman_id": "7c05b2be-d375-4674-a70c-fa7e64a9d8ef",
		"name": "week1.day2.request.chaining",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28447185",
		"_collection_link": "https://testleaf-4289.postman.co/workspace/REST_API_Session_Jul_2025~38051eef-6b80-4a98-bfe1-b21657c61065/collection/28447185-7c05b2be-d375-4674-a70c-fa7e64a9d8ef?action=share&source=collection_link&creator=28447185"
	},
	"item": [
		{
			"name": "create-a-record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has Created\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"});\r",
							"\r",
							"var jsonResponse = pm.response.json();\r",
							"pm.collectionVariables.set(\"sys_id\", jsonResponse.result.sys_id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{protocal}}://{{hostname}}/{{path}}/:tableName",
					"protocol": "{{protocal}}",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"{{path}}",
						":tableName"
					],
					"variable": [
						{
							"key": "tableName",
							"value": "{{tableName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get-a-record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result.sys_id).to.eql(pm.collectionVariables.get(\"sys_id\"));\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocal}}://{{hostname}}/{{path}}/:tableName/:sys_id",
					"protocol": "{{protocal}}",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"{{path}}",
						":tableName",
						":sys_id"
					],
					"variable": [
						{
							"key": "tableName",
							"value": "{{tableName}}"
						},
						{
							"key": "sys_id",
							"value": "{{sys_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "update-a-record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate the sys_id value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result.sys_id).to.eql(pm.collectionVariables.get(\"sys_id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Validate the short_description value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result.short_description).to.eql(\"APISESSIONJUL2025\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validate the description value\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result.description).to.eql(\"Update a record using PUT Method\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"short_description\": \"APISESSIONJUL2025\",\r\n    \"description\": \"Update a record using PUT Method\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocal}}://{{hostname}}/{{path}}/:tableName/:sys_id",
					"protocol": "{{protocal}}",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"{{path}}",
						":tableName",
						":sys_id"
					],
					"variable": [
						{
							"key": "tableName",
							"value": "{{tableName}}"
						},
						{
							"key": "sys_id",
							"value": "{{sys_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete-a-record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has No Content\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocal}}://{{hostname}}/{{path}}/:tableName/:sys_id",
					"protocol": "{{protocal}}",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"{{path}}",
						":tableName",
						":sys_id"
					],
					"variable": [
						{
							"key": "tableName",
							"value": "{{tableName}}"
						},
						{
							"key": "sys_id",
							"value": "{{sys_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "validate-record-is-deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has Not Found\", function () {\r",
							"    pm.response.to.have.status(\"Not Found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{protocal}}://{{hostname}}/{{path}}/:tableName/:sys_id",
					"protocol": "{{protocal}}",
					"host": [
						"{{hostname}}"
					],
					"path": [
						"{{path}}",
						":tableName",
						":sys_id"
					],
					"variable": [
						{
							"key": "tableName",
							"value": "{{tableName}}"
						},
						{
							"key": "sys_id",
							"value": "{{sys_id}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "path",
			"value": "api/now/table",
			"type": "string"
		},
		{
			"key": "username",
			"value": "admin",
			"type": "string"
		},
		{
			"key": "password",
			"value": "",
			"type": "string"
		},
		{
			"key": "sys_id",
			"value": ""
		},
		{
			"key": "tableName",
			"value": "incident",
			"type": "string"
		}
	]
}